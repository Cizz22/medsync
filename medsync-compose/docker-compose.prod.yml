version: "3.8"

services:
  db:
    container_name: medsync-db
    image: postgres:15
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=nucleus
      - POSTGRES_PASSWORD=foofar
      - PGUSER=postgres
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - medsync-network
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ../medsync-db:/docker-entrypoint-initdb.d

  engine:
    container_name: medsync-engine
    image: ghcr.io/nucleuscloud/neosync/api
    ports:
      - 8080:8080
    command: serve connect
    environment:
      - HOST=0.0.0.0
      - PORT=8080
      - NUCLEUS_ENV=dev
      - TEMPORAL_URL=temporal:7233
      - DB_AUTO_MIGRATE=true
      - DB_SCHEMA_DIR=/migrations
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=nucleus
      - DB_USER=postgres
      - DB_PASS=foofar
      - DB_SSL_DISABLE=true
      - DB_MIGRATIONS_TABLE=neosync_api_schema_migrations
      - DB_MIGRATIONS_TABLE_QUOTED=false
      - AUTH_ENABLED=false
    networks:
      - medsync-network
      - temporal-network
    restart: on-failure
    depends_on:
      - db

  worker:
    container_name: medsync-worker
    image: ghcr.io/nucleuscloud/neosync/worker
    environment:
      - NUCLEUS_ENV=dev
      - TEMPORAL_URL=temporal:7233
      - TEMPORAL_NAMESPACE=default
      - TEMPORAL_TASK_QUEUE=sync-job
      - NEOSYNC_URL=http://engine:8080
      - REDIS_URL=redis://default:foofar@redis:6379
    networks:
      - medsync-network
      - temporal-network
    restart: on-failure

  redis:
    container_name: medsync-redis
    image: redis:7.2.4
    ports:
      - 6379:6379
    command: redis-server --save 20 1 --loglevel warning --requirepass foofar
    networks:
      - medsync-network
    volumes:
      - redis_cache:/data

volumes:
  redis_cache:
  pg_data:


networks:
  neosync-network:
    driver: bridge
    name: medsync-network
  temporal-network:
    external: true
