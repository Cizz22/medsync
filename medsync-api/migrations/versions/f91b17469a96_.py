"""empty message

Revision ID: f91b17469a96
Revises: 
Create Date: 2024-04-02 13:54:19.723126

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import Text
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f91b17469a96'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('connector_catalog',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('catalog', postgresql.JSON(astext_type=Text()), nullable=False),
    sa.Column('catalog_hash', sa.String(length=32), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('connector_catalog_fetch_event',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('connector_catalog_id', sa.Integer(), nullable=False),
    sa.Column('connector_id', sa.Integer(), nullable=False),
    sa.Column('config_hash', sa.String(length=32), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('connector_definition',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('icon', sa.String(length=256), nullable=True),
    sa.Column('connector_type', sa.String(length=36), nullable=False),
    sa.Column('source_type', sa.String(length=36), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('resource_requirements', postgresql.JSON(astext_type=Text()), nullable=True),
    sa.Column('public', sa.Boolean(), nullable=False),
    sa.Column('icon_url', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('state',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('connection_id', sa.Integer(), nullable=False),
    sa.Column('state', postgresql.JSON(astext_type=Text()), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('stream_name', sa.String(length=256), nullable=True),
    sa.Column('namespace', sa.String(length=256), nullable=True),
    sa.Column('type', sa.String(length=36), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=300), nullable=False),
    sa.Column('email', sa.String(length=300), nullable=False),
    sa.Column('password', sa.String(length=300), nullable=False),
    sa.Column('type', sa.String(length=300), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('connector',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('connector_definition_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('configuration', postgresql.JSON(astext_type=Text()), nullable=False),
    sa.Column('connector_type', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['connector_definition_id'], ['connector_definition.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('connector_specification',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('connector_definition_id', sa.Integer(), nullable=False),
    sa.Column('spec', postgresql.JSON(astext_type=Text()), nullable=False),
    sa.Column('documentation_url', sa.String(length=256), nullable=True),
    sa.Column('docker_repository', sa.String(length=256), nullable=True),
    sa.Column('docker_image_tag', sa.String(length=256), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['connector_definition_id'], ['connector_definition.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('connection',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('source_id', sa.Integer(), nullable=False),
    sa.Column('destination_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('catalog', postgresql.JSONB(astext_type=Text()), nullable=False),
    sa.Column('status', sa.String(length=36), nullable=True),
    sa.Column('resource_requirements', postgresql.JSONB(astext_type=Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('source_catalog_id', sa.Integer(), nullable=True),
    sa.Column('schedule_type', sa.String(length=36), nullable=True),
    sa.Column('schedule_data', postgresql.JSONB(astext_type=Text()), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['destination_id'], ['connector.id'], ),
    sa.ForeignKeyConstraint(['source_id'], ['connector.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('connection')
    op.drop_table('connector_specification')
    op.drop_table('connector')
    op.drop_table('users')
    op.drop_table('state')
    op.drop_table('connector_definition')
    op.drop_table('connector_catalog_fetch_event')
    op.drop_table('connector_catalog')
    # ### end Alembic commands ###
